{"ast":null,"code":"var _jsxFileName = \"/Users/yokura/Desktop/python_app2/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Upload, Play, Clock, Image, FileVideo, CheckCircle, Loader2 } from 'lucide-react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoMemeAnalyzer = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [results, setResults] = useState(null);\n  const [videoUrl, setVideoUrl] = useState(null);\n  const videoRef = useRef(null);\n  const handleFileSelect = e => {\n    const file = e.target.files[0];\n    if (file && file.type.startsWith('video/')) {\n      setSelectedFile(file);\n      setVideoUrl(URL.createObjectURL(file));\n      setResults(null);\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) return;\n    setIsUploading(true);\n    const formData = new FormData();\n    formData.append('video', selectedFile);\n    try {\n      const response = await fetch('http://localhost:5050/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setResults(data);\n      } else {\n        alert('Upload failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Upload error:', error);\n      alert('Upload failed. Please check if the backend server is running.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const jumpToTimestamp = timestamp => {\n    if (videoRef.current) {\n      videoRef.current.currentTime = timestamp;\n      videoRef.current.play();\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-title\",\n        children: \"AI Video Meme Analyzer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-upload-area\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"file-upload-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-upload-content\",\n              children: [/*#__PURE__*/_jsxDEV(Upload, {\n                className: \"upload-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"upload-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"upload-text-bold\",\n                  children: \"Click to upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this), \" or drag and drop\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"upload-subtext\",\n                children: \"MP4, AVI, MOV files supported\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"file-input\",\n              accept: \"video/*\",\n              onChange: handleFileSelect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-details\",\n            children: [/*#__PURE__*/_jsxDEV(FileVideo, {\n              className: \"file-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-name\",\n              children: selectedFile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpload,\n            disabled: isUploading,\n            className: `upload-button ${isUploading ? 'uploading' : ''}`,\n            children: isUploading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Loader2, {\n                className: \"button-icon spinning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this), \"Processing...\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Upload, {\n                className: \"button-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this), \"Analyze Video\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-content\",\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            className: \"success-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"success-text\",\n            children: [\"Processing completed! Found \", results.suggestions.length, \" meme suggestions.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-section\",\n          children: [videoUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-player-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: [/*#__PURE__*/_jsxDEV(Play, {\n                className: \"section-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), \"Video Player\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              src: videoUrl,\n              controls: true,\n              className: \"video-player\",\n              children: \"Your browser does not support video playback.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestions-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: [/*#__PURE__*/_jsxDEV(Clock, {\n                className: \"section-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), \"AI Suggestions\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestions-list\",\n              children: results.suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => jumpToTimestamp(suggestion.timestamp),\n                className: \"suggestion-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"suggestion-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"suggestion-left\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"timestamp-badge\",\n                      children: [formatTime(suggestion.timestamp), \"-\", formatTime(suggestion.end_timestamp)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"suggestion-details\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"meme-name\",\n                        children: suggestion.meme_file.replace('.jpg', ' Meme')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"meme-description\",\n                        children: suggestion.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 170,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"suggestion-right\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"confidence-score\",\n                      children: [Math.round(suggestion.confidence * 100), \"% match\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `../backend/memes/${suggestion.meme_file}`,\n                      alt: \"suitable meme\",\n                      width: \"128px\",\n                      height: \"128\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meme-library\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                className: \"section-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), \"Meme Library\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meme-list\",\n              children: [{\n                name: \"Success Kid\",\n                type: \"happy\",\n                desc: \"Excited reaction\"\n              }, {\n                name: \"Sad Cat\",\n                type: \"sad\",\n                desc: \"Disappointed reaction\"\n              }, {\n                name: \"Angry Baby\",\n                type: \"angry\",\n                desc: \"Frustrated reaction\"\n              }, {\n                name: \"Happy Dog\",\n                type: \"happy\",\n                desc: \"Joyful reaction\"\n              }, {\n                name: \"Confused Cat\",\n                type: \"confused\",\n                desc: \"Puzzled reaction\"\n              }, {\n                name: \"Satisfied Frog\",\n                type: \"content\",\n                desc: \"Content reaction\"\n              }].map((meme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meme-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"meme-item-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"meme-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"meme-item-name\",\n                      children: meme.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"meme-item-desc\",\n                      children: meme.desc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `meme-type-badge ${meme.type}`,\n                    children: meme.type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"analysis-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"analysis-title\",\n                children: \"Analysis Complete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"analysis-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"File: \", results.video_file]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Suggestions: \", results.suggestions.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Processed: \", new Date(results.processed_at).toLocaleTimeString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoMemeAnalyzer, \"sMfX7W2eqWpRqnjt5c7Kqaq9kDo=\");\n_c = VideoMemeAnalyzer;\nexport default VideoMemeAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"VideoMemeAnalyzer\");","map":{"version":3,"names":["React","useState","useRef","Upload","Play","Clock","Image","FileVideo","CheckCircle","Loader2","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoMemeAnalyzer","_s","selectedFile","setSelectedFile","isUploading","setIsUploading","results","setResults","videoUrl","setVideoUrl","videoRef","handleFileSelect","e","file","target","files","type","startsWith","URL","createObjectURL","handleUpload","formData","FormData","append","response","fetch","method","body","ok","data","json","alert","error","console","jumpToTimestamp","timestamp","current","currentTime","play","formatTime","seconds","mins","Math","floor","secs","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","name","onClick","disabled","suggestions","length","ref","src","controls","map","suggestion","index","end_timestamp","meme_file","replace","description","round","confidence","alt","width","height","desc","meme","video_file","Date","processed_at","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/Users/yokura/Desktop/python_app2/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Upload, Play, Clock, Image, FileVideo, CheckCircle, Loader2 } from 'lucide-react';\nimport './App.css';\n\nconst VideoMemeAnalyzer = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [results, setResults] = useState(null);\n  const [videoUrl, setVideoUrl] = useState(null);\n  const videoRef = useRef(null);\n\n  const handleFileSelect = (e) => {\n    const file = e.target.files[0];\n    if (file && file.type.startsWith('video/')) {\n      setSelectedFile(file);\n      setVideoUrl(URL.createObjectURL(file));\n      setResults(null);\n    }\n  };\n\n  const handleUpload = async () => {\n    if (!selectedFile) return;\n\n    setIsUploading(true);\n    const formData = new FormData();\n    formData.append('video', selectedFile);\n\n    try {\n      const response = await fetch('http://localhost:5050/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setResults(data);\n      } else {\n        alert('Upload failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Upload error:', error);\n      alert('Upload failed. Please check if the backend server is running.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const jumpToTimestamp = (timestamp) => {\n    if (videoRef.current) {\n      videoRef.current.currentTime = timestamp;\n      videoRef.current.play();\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1 className=\"main-title\">\n          AI Video Meme Analyzer\n        </h1>\n\n        {/* Upload Section */}\n        <div className=\"upload-section\">\n          <div className=\"file-upload-area\">\n            <label className=\"file-upload-label\">\n              <div className=\"file-upload-content\">\n                <Upload className=\"upload-icon\" />\n                <p className=\"upload-text\">\n                  <span className=\"upload-text-bold\">Click to upload</span> or drag and drop\n                </p>\n                <p className=\"upload-subtext\">MP4, AVI, MOV files supported</p>\n              </div>\n              <input\n                type=\"file\"\n                className=\"file-input\"\n                accept=\"video/*\"\n                onChange={handleFileSelect}\n              />\n            </label>\n          </div>\n\n          {selectedFile && (\n            <div className=\"file-info\">\n              <div className=\"file-details\">\n                <FileVideo className=\"file-icon\" />\n                <span className=\"file-name\">{selectedFile.name}</span>\n              </div>\n              <button\n                onClick={handleUpload}\n                disabled={isUploading}\n                className={`upload-button ${isUploading ? 'uploading' : ''}`}\n              >\n                {isUploading ? (\n                  <>\n                    <Loader2 className=\"button-icon spinning\" />\n                    Processing...\n                  </>\n                ) : (\n                  <>\n                    <Upload className=\"button-icon\" />\n                    Analyze Video\n                  </>\n                )}\n              </button>\n            </div>\n          )}\n        </div>\n\n        {/* Processing Complete */}\n        {results && (\n          <div className=\"success-message\">\n            <div className=\"success-content\">\n              <CheckCircle className=\"success-icon\" />\n              <span className=\"success-text\">\n                Processing completed! Found {results.suggestions.length} meme suggestions.\n              </span>\n            </div>\n          </div>\n        )}\n\n        <div className=\"content-grid\">\n          {/* Video Player */}\n          <div className=\"video-section\">\n            {videoUrl && (\n              <div className=\"video-player-container\">\n                <h2 className=\"section-title\">\n                  <Play className=\"section-icon\" />\n                  Video Player\n                </h2>\n                <video\n                  ref={videoRef}\n                  src={videoUrl}\n                  controls\n                  className=\"video-player\"\n                >\n                  Your browser does not support video playback.\n                </video>\n              </div>\n            )}\n\n            {/* AI Suggestions Timeline */}\n            {results && (\n              <div className=\"suggestions-container\">\n                <h2 className=\"section-title\">\n                  <Clock className=\"section-icon\" />\n                  AI Suggestions\n                </h2>\n                <div className=\"suggestions-list\">\n                  {results.suggestions.map((suggestion, index) => (\n                    <div\n                      key={index}\n                      onClick={() => jumpToTimestamp(suggestion.timestamp)}\n                      className=\"suggestion-item\"\n                    >\n                      <div className=\"suggestion-content\">\n                        <div className=\"suggestion-left\">\n                          <div className=\"timestamp-badge\">\n                            {formatTime(suggestion.timestamp)}-{formatTime(suggestion.end_timestamp)}\n                          </div>\n                          <div className=\"suggestion-details\">\n                            <div className=\"meme-name\">\n                              {suggestion.meme_file.replace('.jpg', ' Meme')}\n                            </div>\n                            <div className=\"meme-description\">\n                              {suggestion.description}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"suggestion-right\">\n                          <span className=\"confidence-score\">\n                            {Math.round(suggestion.confidence * 100)}% match\n                          </span>\n                          <img src={`../backend/memes/${suggestion.meme_file}`} alt=\"suitable meme\" width=\"128px\" height=\"128\" />\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Meme Library */}\n          <div className=\"sidebar\">\n            <div className=\"meme-library\">\n              <h2 className=\"section-title\">\n                <Image className=\"section-icon\" />\n                Meme Library\n              </h2>\n              <div className=\"meme-list\">\n                {[\n                  { name: \"Success Kid\", type: \"happy\", desc: \"Excited reaction\" },\n                  { name: \"Sad Cat\", type: \"sad\", desc: \"Disappointed reaction\" },\n                  { name: \"Angry Baby\", type: \"angry\", desc: \"Frustrated reaction\" },\n                  { name: \"Happy Dog\", type: \"happy\", desc: \"Joyful reaction\" },\n                  { name: \"Confused Cat\", type: \"confused\", desc: \"Puzzled reaction\" },\n                  { name: \"Satisfied Frog\", type: \"content\", desc: \"Content reaction\" }\n                ].map((meme, index) => (\n                  <div key={index} className=\"meme-item\">\n                    <div className=\"meme-item-content\">\n                      <div className=\"meme-info\">\n                        <div className=\"meme-item-name\">{meme.name}</div>\n                        <div className=\"meme-item-desc\">{meme.desc}</div>\n                      </div>\n                      <div className={`meme-type-badge ${meme.type}`}>\n                        {meme.type}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {results && (\n                <div className=\"analysis-info\">\n                  <h3 className=\"analysis-title\">Analysis Complete</h3>\n                  <div className=\"analysis-details\">\n                    <div>File: {results.video_file}</div>\n                    <div>Suggestions: {results.suggestions.length}</div>\n                    <div>Processed: {new Date(results.processed_at).toLocaleTimeString()}</div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoMemeAnalyzer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}